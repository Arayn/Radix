apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'

group = 'groupId'
def versionNum = '1.0'
version = versionNum+'-SNAPSHOT'

description = """"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    flatDir {
        dirs 'lib'
    }
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile group: 'org.lwjgl.lwjgl', name: 'lwjgl', version:'2.9.3'
    compile group: 'org.lwjgl.lwjgl', name: 'lwjgl_util', version:'2.9.3'
    compile group: 'org.slick2d', name: 'slick2d-core', version:'1.0.1'
    compile group: 'java3d', name: 'vecmath', version:'1.3.1'
    compile group: 'io.netty', name: 'netty-all', version:'5.0.0.Alpha1'
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version:'2.4.0'
    compile group: 'com.ibm.icu', name: 'icu4j', version:'54.1.1'
    compile name: 'iridiumeventbus-v0'
}

task runServer(type: JavaExec) {
    main = "sx.lambda.mstojcevich.voxel.server.VoxelGameServer"
    classpath = sourceSets.main.runtimeClasspath
}

task runClient(type: JavaExec) {
    if(System.properties['os.name'].toLowerCase().contains('windows')) {
        systemProperty 'java.library.path', file('natives/windows')
    } else if(System.properties['os.name'].toLowerCase().contains('osx')) {
        systemProperty 'java.library.path', file('natives/macosx')
    } else {
        systemProperty 'java.library.path', file('natives/linux')
    }
    main = "sx.lambda.mstojcevich.voxel.VoxelGame"
    classpath = sourceSets.main.runtimeClasspath
}

task jarWithLibs(type: Jar) {
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Implementation-Vendor': 'Marcus Stojcevich',
                'Specification-Title': project.name,
                'Specification-Version': versionNum,
                'Specification-Vendor': 'Marcus Stojcevich',
                'Main-Class': 'sx.lambda.mstojcevich.voxel.VoxelGame'
    }
    baseName = project.name + '-full'

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }}
    with jar
}